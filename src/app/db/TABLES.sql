/**
* Tabla [TIPO_PRODUCTO]
* Contiene los tipos de productos posibles.
* @ID_PRODUCTO [PK] Identificador unico del tipo de producto.
* @NOMBRE_TIPO_PRODUCTO Identificador leible del tipo de producto.
* @DESCRIPCION_TIPO_PRODUCTO Descripción del tipo de producto.
* @ESTADO [CHK] Estado del tipo de producto. 1->Activo|2->Inactivo
*/
CREATE TABLE TIPO_PRODUCTO (
    ID_TIPO_PRODUCTO NUMBER(2,0) PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL,
    DESCRIPCION VARCHAR2(300),
    ESTADO NUMBER(1, 0) DEFAULT 1,
    CONSTRAINT CHK_TIPO_PRODUCTO_ESTADO CHECK (ESTADO IN(0,1))
);

/**
* Tabla [PRODUCTO]
* Contiene los productos posibles por procesar
* @ID_PRODUCTO [PK] Identificador unico del producto.
* @NOMBRE Identificador leible del producto.
* @DESCRIPCION Descripción del producto.
* @ID_TIPO_PRODUCTO [FK] Referencia a un id de tipo de producto.
* @ESTADO [CHK] Estado del producto. 1->Activo|2->Inactivo
*/
CREATE TABLE PRODUCTO (
    ID_PRODUCTO NUMBER(5,0) PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL,
    DESCRIPCION_PRODUCTO VARCHAR2(1000),
    ID_TIPO_PRODUCTO NUMBER(2,0) NOT NULL,
    ESTADO NUMBER(1,0) DEFAULT 1,
    CONSTRAINT CHK_PRODUCTO_ESTADO CHECK (ESTADO IN(0,1)),
    CONSTRAINT FK_PRODUCTO_ID_TIPO_PRODUCTO FOREIGN KEY (ID_TIPO_PRODUCTO) REFERENCES TIPO_PRODUCTO(ID_TIPO_PRODUCTO)
);

/**
* Tabla [PRESENTACION]
* Contine las presentaciones disponibles para compra o venta de los productos y materia prima
* @ID_PRESENTACION [PK] identificador unico de la presentación.
* @NOMBRE Identificador leible de la prensentación ej: Libra, Kilo.
* @LIBRAS Equivalente en libras
* @FACTOR Factor multiplicador para calculo de precio
* @ESTADO [CHK] Estado del producto. 1->Activo|2->Inactivo
*/
CREATE TABLE PRESENTACION (
    ID_PRESENTACION NUMBER(2,0) PRIMARY KEY,
    NOMBRE VARCHAR2(30) UNIQUE,
    LIBRAS NUMBER(8, 2) NOT NULL,
    FACTOR NUMBER(3,2) DEFAULT 1 NOT NULL,
    ESTADO NUMBER(1,0) DEFAULT 1,
    CONSTRAINT CHK_PRESENTACION_ESTADO CHECK (ESTADO IN(0,1))
);

/**
* Tabla [PRECIO]
* Contiene los precios de los productos por presentación
* @ID_PRECIO [PK] Identificador unico de la presentación.
* @ID_PRODUCTO [FK] Referencia a un id de producto.
* @ID_PRESENTACION [FK] Referencia a un id de presentación.
* @PRECIO_REFERENCIA Precio del producto, presentación.
* @FECHA_ALTA Fecha de creación del precio.
*/
CREATE TABLE PRECIO (
    ID_PRECIO NUMBER(5,0) PRIMARY KEY,
    ID_PRODUCTO NUMBER(5,0),
    ID_PRESENTACION NUMBER(5,0),
    PRECIO_REFERENCIA NUMBER(13,3) DEFAULT 0,
    FECHA_ALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_PRECIO_ID_PRESENTACION FOREIGN KEY (ID_PRESENTACION) REFERENCES PRESENTACION(ID_PRESENTACION),
    CONSTRAINT FK_PRECIO_ID_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO)
);

/**
* Tabla [TIPO_DOCUMENTO]
* Contiene los posibles tipos de documentos.
* @ID_TIPO_DOCUMENTO [PK] Identificador unico del tipo de documento.
* @NOMBRE Identificador leible del tipo de documento.
*/
CREATE TABLE TIPO_DOCUMENTO (
    ID_TIPO_DOCUMENTO CHAR(1) PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL UNIQUE
);

/**
* Tabla [ESTADO_CIVIL]
* Contiene los posibles estados civiles.
* @ID_TIPO_DOCUMENTO [PK] Identificador unico del estado civil.
* @NOMBRE Identificador leible del estado civil.
*/
CREATE TABLE ESTADO_CIVIL (
    ID_ESTADO_CIVIL CHAR(1) PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL UNIQUE
);

/**
* Tabla [TIPO_TERCERO]
* Contiene los posibles tipos de terceros.
* @ID_TIPO_TERCERO [PK] Identificador unico del tipo de tercero.
* @NOMBRE Identificador leible del tipo de tercero.
* @DESCRIPCION Descripción del tipo de tercero.
*/
CREATE TABLE TIPO_TERCERO (
    ID_TIPO_TERCERO NUMBER(2,0) PRIMARY KEY,
    NOMBRE VARCHAR2(30) UNIQUE,
    DESCRIPCION VARCHAR(300)
);

/**
* Tabla [TERCERO]
* Contiene los terceros.
* @ID_TERCERO [PK] Identificador unico del tercero.
* @ID_TIPO_DOCUMENTO [FK] Referencia a un id de tipo de documento.
* @NUMERO_DOCUMENTO [UK] Numero de documento del tercero.
* @NOMBRES Nombres del tercero.
* @APELLIDOS Apellidos del tercero.
* @ID_TIPO_TERCERO [FK] Referencia a un id de tipo de tercero.
* @FECHA_NACIMIENTO Fecha nacimiento tercero.
* @ID_ESTADO_CIVIL [FK] Referencia a un id de estado civil.
* @FECHA_ALTA Fecha de creación del tercero.
*/
CREATE TABLE TERCERO (
    ID_TERCERO NUMBER(7,0) PRIMARY KEY,
    ID_TIPO_DOCUMENTO CHAR(1),
    NUMERO_DOCUMENTO VARCHAR2(25) NOT NULL UNIQUE,
    NOMBRES VARCHAR2(200) NOT NULL,
    APELLIDOS VARCHAR2(200) NOT NULL,
    ID_TIPO_TERCERO NUMBER(2,0),
    FECHA_NACIMIENTO NUMBER(8,0),
    ID_ESTADO_CIVIL CHAR(1),
    FECHA_ALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_TERCERO_ID_TIPO_DOCUMENTO FOREIGN KEY (ID_TIPO_DOCUMENTO) REFERENCES TIPO_DOCUMENTO(ID_TIPO_DOCUMENTO),
    CONSTRAINT FK_TERCERO_ID_ESTADO_CIVIL FOREIGN KEY (ID_ESTADO_CIVIL) REFERENCES ESTADO_CIVIL(ID_ESTADO_CIVIL)
);

/**
* Tabla [CLIENTE]
* Contiene los clientes.
* @ID_CLIENTE [PK] Identificador unico del cliente.
* @ID_TERCERO [FK] Referencia a un id de tercero.
* @FACTOR_CLIENTE Multiplicador de descuento por cliente.
* @TELEFONO_CONTACTO Telefono del cliente.
* @DIRECCION_FACTURACION Dirección de facturación del cliente.
* @FECHA_ALTA Fecha de creación del tercero.
*/
CREATE TABLE CLIENTE (
    ID_CLIENTE NUMBER(5,0),
    ID_TERCERO NUMBER(7,0),
    FACTOR NUMBER(3,2) DEFAULT 1 NOT NULL,
    TELEFONO NUMBER(10),
    DIRECCION VARCHAR2(150),
    FECHA_ALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_CLIENTE_ID_TERCERO FOREIGN KEY (ID_TERCERO) REFERENCES TERCERO(ID_TERCERO)
);

/**
* Tabla [ESTADO_INVENTARIO]
* Contiene los posibles estados de un inventario.
* @ID_ESTADO_INVENTARIO [PK] Identificador unico del estado.
* @NOMBRE Identificador leible del estado del inventario.
*/
CREATE TABLE ESTADO_INVENTARIO (
    ID_ESTADO_INVENTARIO CHAR(1) PRIMARY KEY,
    NOMBRE VARCHAR2(30) NOT NULL UNIQUE
);

/**
* Tabla [INVENTARIO]
* Contiene los posibles estados de un inventario.
* @INVENTARIO [PK] Identificador unico del inventario.
*/
CREATE TABLE INVENTARIO (
    ID_INVENTARIO NUMBER(10,0) PRIMARY KEY,
    LOTE VARCHAR2(10) NOT NULL,
    ID_PRESENTACION NUMBER(2,0),
    ID_PRODUCTO NUMBER(5,0),
    ID_ESTADO_INVENTARIO CHAR(1),
    FECHA_ALTA DATE DEFAULT CURRENT_TIMESTAMP,
    FECHA_VENCIMIENTO DATE NOT NULL,
    CONSTRAINT FK_INVENTARIO_ID_EINVENTARIO FOREIGN KEY (ID_ESTADO_INVENTARIO) REFERENCES ESTADO_INVENTARIO(ID_ESTADO_INVENTARIO),
    CONSTRAINT FK_INVENTARIO_ID_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    CONSTRAINT FK_INVENTARIO_ID_PRESENTACION FOREIGN KEY (ID_PRESENTACION) REFERENCES PRESENTACION(ID_PRESENTACION)
);

/**
* Tabla [COMPRA]
* Contiene las compras realizadas
* @ID_COMPRA [PK] Identificador unico de la compra.
*/
CREATE TABLE COMPRA (
    ID_COMPRA NUMBER(5,0) PRIMARY KEY,
    ID_TERCERO NUMBER(7,0),
    FECHA DATE DEFAULT CURRENT_TIMESTAMP,
    VALOR_NETO NUMBER(13,3) DEFAULT 0,
    VALOR_TOTAL NUMBER(13,3) DEFAULT 0,
    CONSTRAINT FK_COMPRA_ID_TERCERO FOREIGN KEY (ID_TERCERO) REFERENCES TERCERO(ID_TERCERO)
);

CREATE TABLE DETALLE_COMPRA (
    ID_DETALLE_COMPRA NUMBER(10, 0) PRIMARY KEY,
    ID_PRODUCTO NUMBER(5,0),
    ID_PRESENTACION NUMBER(2,0),
    CANTIDAD NUMBER(5,2) NOT NULL,
    VALOR_UNITARIO NUMBER(13,3) DEFAULT 0,
    VALOR_TOTAL NUMBER(13,3) DEFAULT 0,
    CONSTRAINT FK_DETALLE_COMPRA_IPRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO),
    CONSTRAINT FK_DETALLE_COMPRA_IPRESENTA FOREIGN KEY (ID_PRESENTACION) REFERENCES PRESENTACION(ID_PRESENTACION)
);

CREATE TABLE NUMERACION_FACTURACION (
    ID_NUMERACION NUMBER(5,0) PRIMARY KEY,
    NUMERO_RESOLUCION NUMBER(10,0),
    PREFIJO CHAR(5) NOT NULL,
    INICIO_RANGO NUMBER(10,0) NOT NULL,
    FIN_RANGO NUMBER(10,0) NOT NULL,
    FECHA_RESOLUCION DATE NOT NULL,
    CONSECUTIVO NUMBER(10,0) DEFAULT 0 NOT NULL,
    ESTADO NUMBER(1,0) DEFAULT 1,
    CONSTRAINT CHK_NUMERACION_FACTESTADO CHECK (ESTADO IN(1,0))
);

CREATE TABLE ESTADO_FACTURA (
    ID_ESTADO_FACTURA NUMBER(2,0) PRIMARY KEY,
    NOMBRE_ESTADO_FACTURA VARCHAR2(30)
);

CREATE TABLE FACTURA (
    ID_FACTURA NUMBER(5,0) PRIMARY KEY,
    ID_NUMERACION NUMBER(5,0) NOT NULL,
    CONSECUTIVO NUMBER(10,0),
    ID_CLIENTE NUMBER(5,0),
    VALOR_NETO NUMBER(13,3),    
    VALOR_TOTAL NUMBER(13,3),
    ID_ESTADO_FACTURA NUMBER(2,0),
    CONSTRAINT FK_FACTURA_ID_NUMERACION FOREIGN KEY (ID_NUMERACION) REFERENCES NUMERACION_FACTURACION(ID_NUMERACION) 
);

CREATE TABLE DETALLE_FACTURA (
    ID_DETALLE_FACTURA NUMBER(10,0) PRIMARY KEY,
    ID_FACTURA NUMBER(5,0),
    ID_INVENTARIO NUMBER(10,0),
    VALOR NUMBER(13,3) NOT NULL,
    CONSTRAINT FK_DETALLE_FACTURA_ID_FACTURA FOREIGN KEY (ID_FACTURA) REFERENCES FACTURA(ID_FACTURA),
    CONSTRAINT FK_DETALLE_FACTURA_IINVENTARIO FOREIGN KEY (ID_INVENTARIO) REFERENCES INVENTARIO(ID_INVENTARIO)
);

CREATE TABLE EMPLEADO (
    ID_EMPLEADO NUMBER(5,0) PRIMARY KEY,
    ID_TERCERO NUMBER(7,0),
    FACTOR NUMBER(3,2),
    TELEFONO NUMBER(10),
    FECHA_INGRESO DATE NOT NULL,
    FECHA_RETIRO DATE,
    CONSTRAINT FK_EMPLEADO_ID_TERCERO FOREIGN KEY (ID_TERCERO) REFERENCES TERCERO(ID_TERCERO)
);

CREATE TABLE PRODUCCION (
    ID_PRODUCCION NUMBER(7,0) PRIMARY KEY,
    ID_EMPLEADO NUMBER(5,0),
    FECHA_ALTA DATE DEFAULT CURRENT_TIMESTAMP,
    VALOR NUMBER(13,3)
);

CREATE TABLE DETALLE_PRODUCCION (
    ID_DETALLE_PRODUCCION NUMBER(10,0) PRIMARY KEY,
    ID_PRODUCCION NUMBER(7,0),
    ID_INVENTARIO NUMBER(10,0),
    FECHA_ALTA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_DP_ID_PRODUCCION FOREIGN KEY (ID_PRODUCCION) REFERENCES PRODUCCION(ID_PRODUCCION),
    CONSTRAINT FK_DP_ID_INVENTARIO FOREIGN KEY (ID_INVENTARIO) REFERENCES INVENTARIO(ID_INVENTARIO)
);