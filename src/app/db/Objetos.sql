/*********************************************INDEX**********************************************/

CREATE INDEX DETALLE_PRODUCCION_INDEX
ON DETALLE_PRODUCCION(ID_PRODUCCION);

CREATE INDEX CLIENTE_TERCERO_INDEX
ON CLIENTE(ID_TERCERO);

CREATE INDEX TERCERO_INDEX
ON TERCERO(ID_TIPO_DOCUMENTO, NUMERO_DOCUMENTO);

CREATE INDEX PRECIO_PROE_INDEX
ON PRECIO(ID_PRODUCTO, ID_PRESENTACION);

CREATE INDEX DETALLE_COMPRA_INDEX
ON DETALLE_COMPRA(ID_COMPRA);

CREATE INDEX INVENTARIO_PROE_INDEX
ON INVENTARIO(ID_PRODUCTO, ID_PRESENTACION);

/*********************************************SINONIMOS**********************************************/

CREATE SYNONYM DET_FACT
FOR DETALLE_FACTURA;

CREATE SYNONYM DET_PROD
FOR DETALLE_PRODUCCION;

CREATE SYNONYM NUM_FACT
FOR NUMERACION_FACTURACION;

/*********************************************SECUENCIAS**********************************************/

DROP SEQUENCE TIPO_PRODUCTO_SEQ;
CREATE SEQUENCE TIPO_PRODUCTO_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER TIPO_PRODUCTO_TRI
    BEFORE INSERT ON "TIPO_PRODUCTO"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_TIPO_PRODUCTO" IS NULL THEN
        SELECT "TIPO_PRODUCTO_SEQ".NEXTVAL INTO :NEW."ID_TIPO_PRODUCTO" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE PRODUCTO_SEQ;
CREATE SEQUENCE PRODUCTO_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER PRODUCTO_TRI
    BEFORE INSERT ON "PRODUCTO"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_PRODUCTO" IS NULL THEN
        SELECT "PRODUCTO_SEQ".NEXTVAL INTO :NEW."ID_PRODUCTO" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE PRESENTACION_SEQ;
CREATE SEQUENCE PRESENTACION_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER PRESENTACION_TRI
    BEFORE INSERT ON "PRESENTACION"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_PRESENTACION" IS NULL THEN
        SELECT "PRESENTACION_SEQ".NEXTVAL INTO :NEW."ID_PRESENTACION" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE PRECIO_SEQ;
CREATE SEQUENCE PRECIO_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER PRECIO_TRI
    BEFORE INSERT ON "PRECIO"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_PRECIO" IS NULL THEN
        SELECT "PRECIO_SEQ".NEXTVAL INTO :NEW."ID_PRECIO" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE TERC_SEQ;
CREATE SEQUENCE TERC_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER TERC_TRI 
    BEFORE INSERT ON "TERCERO"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_TERCERO" IS NULL THEN
        SELECT "TERC_SEQ".NEXTVAL INTO :NEW."ID_TERCERO" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE CLIE_SEQ;
CREATE SEQUENCE CLIE_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER CLIE_TRI 
    BEFORE INSERT ON "CLIENTE"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_CLIENTE" IS NULL THEN
        SELECT "CLIE_SEQ".NEXTVAL INTO :NEW."ID_CLIENTE" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE EMPLE_SEQ;
CREATE SEQUENCE EMPLE_SEQ START WITH 5;

CREATE OR REPLACE TRIGGER EMPLE_TRI 
    BEFORE INSERT ON "EMPLEADO"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_EMPLEADO" IS NULL THEN
        SELECT "EMPLE_SEQ".NEXTVAL INTO :NEW."ID_EMPLEADO" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE INVENTARIO_SEQ;
CREATE SEQUENCE INVENTARIO_SEQ START WITH 1130;

CREATE OR REPLACE TRIGGER INVENTARIO_TRI 
    BEFORE INSERT ON "INVENTARIO"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_INVENTARIO" IS NULL THEN
        SELECT "INVENTARIO_SEQ".NEXTVAL INTO :NEW."ID_INVENTARIO" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE COMPRA_SEQ;
CREATE SEQUENCE COMPRA_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER COMPRA_TRI 
    BEFORE INSERT ON "COMPRA"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_COMPRA" IS NULL THEN
        SELECT "COMPRA_SEQ".NEXTVAL INTO :NEW."ID_COMPRA" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE DET_COMPRA_SEQ;
CREATE SEQUENCE DET_COMPRA_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER DET_COMPRA_TRI 
    BEFORE INSERT ON "DETALLE_COMPRA"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_DETALLE_COMPRA" IS NULL THEN
        SELECT "DET_COMPRA_SEQ".NEXTVAL INTO :NEW."ID_DETALLE_COMPRA" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE NUM_FACT_SEQ;
CREATE SEQUENCE NUM_FACT_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER NUM_FACT_TRI 
    BEFORE INSERT ON "NUMERACION_FACTURACION"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_NUMERACION" IS NULL THEN
        SELECT "NUM_FACT_SEQ".NEXTVAL INTO :NEW."ID_NUMERACION" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE ESTADO_FACT_SEQ;
CREATE SEQUENCE ESTADO_FACT_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER ESTADO_FACT_TRI 
    BEFORE INSERT ON "ESTADO_FACTURA"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_ESTADO_FACTURA" IS NULL THEN
        SELECT "ESTADO_FACT_SEQ".NEXTVAL INTO :NEW."ID_ESTADO_FACTURA" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE FACTURA_SEQ;
CREATE SEQUENCE FACTURA_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER FACT_TRI 
    BEFORE INSERT ON "FACTURA"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_FACTURA" IS NULL THEN
        SELECT "FACTURA_SEQ".NEXTVAL INTO :NEW."ID_FACTURA" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE DET_FACTURA_SEQ;
CREATE SEQUENCE DET_FACTURA_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER DET_FACTURA_TRI 
    BEFORE INSERT ON "DETALLE_FACTURA"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_DETALLE_FACTURA" IS NULL THEN
        SELECT "DET_FACTURA_SEQ".NEXTVAL INTO :NEW."ID_DETALLE_FACTURA" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE PRODUCCION_SEQ;
CREATE SEQUENCE PRODUCCION_SEQ START WITH 20;

CREATE OR REPLACE TRIGGER PRODUCCION_TRI 
    BEFORE INSERT ON "PRODUCCION"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_PRODUCCION" IS NULL THEN
        SELECT "PRODUCCION_SEQ".NEXTVAL INTO :NEW."ID_PRODUCCION" FROM DUAL;
    END IF;
END;
/

DROP SEQUENCE PRODUCCION_DET_SEQ;
CREATE SEQUENCE PRODUCCION_DET_SEQ START WITH 20;

CREATE OR REPLACE TRIGGER PRODUCCION_DET_TRI 
    BEFORE INSERT ON "DETALLE_PRODUCCION"
    FOR EACH ROW
BEGIN
    IF :NEW."ID_DETALLE_PRODUCCION" IS NULL THEN
        SELECT "PRODUCCION_DET_SEQ".NEXTVAL INTO :NEW."ID_DETALLE_PRODUCCION" FROM DUAL;
    END IF;
END;
/




DROP SEQUENCE DEPT_ID_SEQ;
CREATE SEQUENCE DEPT_ID_SEQ START WITH 1;

CREATE OR REPLACE TRIGGER DEPARTMENT_TRI 
    BEFORE INSERT ON "DEPARTMENT"
    FOR EACH ROW
BEGIN
    IF :NEW."DEPTNO" IS NULL THEN
        SELECT "DEPT_ID_SEQ".NEXTVAL INTO :NEW."DEPTNO" FROM DUAL;
    END IF;
END;
/


SELECT index_name, table_name, uniqueness FROM user_indexes;
 WHERE table_name = 'PRODUCTO';